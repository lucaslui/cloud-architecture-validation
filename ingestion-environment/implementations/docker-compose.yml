services:
  vernemq:
    image: vernemq/vernemq:latest
    container_name: vernemq
    environment:
      - DOCKER_VERNEMQ_ACCEPT_EULA=yes
      - DOCKER_VERNEMQ_ALLOW_ANONYMOUS=on
      - DOCKER_VERNEMQ_LISTENER__TCP__DEFAULT=0.0.0.0:1883
      - DOCKER_VERNEMQ_LOG__CONSOLE__LEVEL=info
    ports:
      - "1883:1883"
    healthcheck:
      test: ["CMD-SHELL", "timeout 2 bash -c '</dev/tcp/127.0.0.1/1883'"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 60s

  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:19092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:19092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
    ports:
      - "9092:9092"
      - "19092:19092"
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: ["CMD", "bash", "-lc", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 60s
      
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'false'
    depends_on:
      kafka:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    container_name: redis-hems
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 2s
      retries: 20
  
  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=hems
      - DOCKER_INFLUXDB_INIT_BUCKET=hems_timeseries
      # Token de desenvolvimento (use um segredo de verdade em prod)
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=dev-token
    volumes:
      - influxdb_data:/var/lib/influxdb2
    healthcheck:
      test: ["CMD", "influx", "ping", "--host", "http://localhost:8086"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 30s

  schema-loader:
    build: ./schema-registry
    container_name: schema-loader
    restart: "no"
    environment:
      - SCHEMA_REGISTRY_FS_ROOT=/app
      - REDIS_ADDR=redis:6379
      - SCHEMA_TTL_SECONDS=0
    depends_on:
      redis:
        condition: service_healthy
    entrypoint: ["/app/schema-loader"]

  collector:
    build: ./collector
    container_name: collector
    restart: unless-stopped
    environment:
      - MQTT_BROKER_URL=tcp://vernemq:1883
      - MQTT_CLIENT_ID=hems-collector
      - MQTT_TOPIC=ingestion/telemetry
      - MQTT_QOS=0
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=raw-events-topic
      - KAFKA_DLQ_TOPIC=raw-events-dlq
      - KAFKA_TOPIC_PARTITIONS=1
      - KAFKA_DLQ_PARTITIONS=1
      - KAFKA_REPLICATION_FACTOR=1
    depends_on:
      vernemq:
        condition: service_healthy
      kafka:
        condition: service_healthy

  enricher_validator:
    build: ./enricher-validator
    container_name: enricher-validator
    restart: unless-stopped
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_INPUT_TOPIC=raw-events-topic
      - KAFKA_OUTPUT_TOPIC=enriched-events-topic
      - KAFKA_DLQ_TOPIC=validation-dlq-topic
      - REDIS_ADDR=redis:6379
      - REDIS_DB=0
      - REDIS_NAMESPACE=schema
      - REDIS_USE_PUBSUB=true
      - REDIS_INVALIDATE_CHANNEL=schemas:invalidate
      - CONTEXT_STORE_PATH=/app/device-context.json
    depends_on:
      collector:
        condition: service_started
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
      schema-loader:
        condition: service_completed_successfully

  real-time-loader:
    build: ./real-time-loader
    container_name: real-time-loader
    restart: unless-stopped
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_GROUP_ID=real-time-loader
      - KAFKA_INPUT_TOPIC=enriched-events-topic
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_TOKEN=dev-token
      - INFLUX_ORG=hems
      - INFLUX_BUCKET=hems_timeseries
      # Opcional: nome da medição
      - INFLUX_MEASUREMENT=smartmeter
    depends_on:
      kafka:
        condition: service_healthy
      influxdb:
        condition: service_healthy

volumes:
  kafka_data:
    driver: local
    driver_opts:
      type: none
      device: ./volumes/kafka/data
      o: bind
  influxdb_data:
    driver: local
    driver_opts:
      type: none
      device: ./volumes/influxdb_data
      o: bind