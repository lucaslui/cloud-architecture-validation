# ==========================
# Kafka - values.yaml (essencial, pronto)
# ==========================

fullnameOverride: kafka

image:
  registry: docker.io
  repository: bitnami/kafka
  tag: 4.0.0-debian-12-r10
  pullPolicy: IfNotPresent

sasl:
  interBrokerMechanism: "PLAIN"
  controllerMechanism: "PLAIN"
  enabledMechanisms: "PLAIN,SCRAM-SHA-256,SCRAM-SHA-512"

  existingSecret: ""
  interbroker:
    user: ""
    password: ""
    clientId: ""
    clientSecret: ""
  controller:
    user: ""
    password: ""
    clientId: ""
    clientSecret: ""

listeners:
  client:
    name: CLIENT
    protocol: "PLAINTEXT"
    containerPort: 9092
  interbroker:
    name: INTERNAL
    protocol: "PLAINTEXT"
    containerPort: 9094
  controller:
    name: CONTROLLER
    protocol: "PLAINTEXT"
    containerPort: 9093
  external:
    name: EXTERNAL
    protocol: "PLAINTEXT"
    containerPort: 9095

tls:
  autoGenerated:
    enabled: false

service:
  type: ClusterIP
  ports:
    client: 9092
    interbroker: 9094
    controller: 9093
    external: 9095

externalAccess:
  enabled: false
  controller:
    forceExpose: false
    service:
      type: ClusterIP
      domain: cluster.local
      nodePorts: []
      externalIPs: []
      loadBalancerSourceRanges: []
      loadBalancerIPs: []
      loadBalancerNames: []
      loadBalancerAnnotations: []
  broker:
    service:
      type: ClusterIP
      domain: cluster.local
      nodePorts: []
      externalIPs: []
      loadBalancerSourceRanges: []
      loadBalancerIPs: []
      loadBalancerNames: []
      loadBalancerAnnotations: []

kraftVersion: 1

defaultInitContainers:
  prepareConfig:
    resourcesPreset: "nano"
    resources: {}
  autoDiscovery:
    enabled: false
    image:
      registry: docker.io
      repository: bitnami/kubectl
      tag: 1.33.4-debian-12-r0
      pullPolicy: IfNotPresent
  volumePermissions:
    enabled: false
    image:
      registry: docker.io
      repository: bitnami/os-shell
      tag: 12-debian-12-r51
      pullPolicy: IfNotPresent

controller:
  replicaCount: 1
  controllerOnly: true
  resourcesPreset: "small"
  persistence:
    enabled: true
    size: 5Gi

broker:
  replicaCount: 1
  resourcesPreset: "small"
  persistence:
    enabled: true
    size: 10Gi
  config:
    auto.create.topics.enable: "true"
    offsets.topic.replication.factor: "1"
    transaction.state.log.replication.factor: "1"
    transaction.state.log.min.isr: "1"

provisioning:
  enabled: true
  waitForKafka: true
  resourcesPreset: "micro"
  topics:
    - name: raw-events-topic
      partitions: 6
      replicationFactor: 1
    - name: raw-events-dlq
      partitions: 1
      replicationFactor: 1
    - name: validated-events-topic
      partitions: 6
      replicationFactor: 1
    - name: validated-events-dlq
      partitions: 1
      replicationFactor: 1
    - name: enriched-events-topic
      partitions: 6
      replicationFactor: 1
    - name: enriched-events-dlq
      partitions: 1
      replicationFactor: 1

metrics:
  jmx:
    enabled: false
    image:
      registry: docker.io
      repository: bitnami/jmx-exporter
      tag: 1.4.0-debian-12-r0
      pullPolicy: IfNotPresent

diagnosticMode:
  enabled: false
  command: ["sleep"]
  args: ["infinity"]
